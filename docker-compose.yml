version: '3.8'

services:
  # MongoDB for wine data
  mongodb:
    image: mongo:latest
    container_name: terroir-mongodb
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-password}
      MONGO_INITDB_DATABASE: terroir-wines
    volumes:
      - mongo-data:/data/db
    networks:
      - terroir-network

  # Redis for caching
  redis:
    image: redis:alpine
    container_name: terroir-redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - terroir-network

  # Backend API service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: terroir-backend
    restart: always
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=development
      - MONGO_URI=mongodb://${MONGO_USERNAME:-admin}:${MONGO_PASSWORD:-password}@mongodb:27017/terroir-wines?authSource=admin
      - REDIS_URI=redis://redis:6379
      - PORT=4000
      - JWT_SECRET=${JWT_SECRET:-your_jwt_secret_key}
      - JWT_EXPIRES_IN=7d
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - mongodb
      - redis
    networks:
      - terroir-network

  # Frontend application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: terroir-frontend
    restart: always
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:4000/api
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - terroir-network

  # Nginx for reverse proxy (optional but recommended for production)
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: terroir-nginx
    restart: always
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
    networks:
      - terroir-network

# Volumes for data persistence
volumes:
  mongo-data:

# Networks for service communication
networks:
  terroir-network:
    driver: bridge